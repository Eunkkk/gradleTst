buildscript {
    ext{            //ext는 build.gradle에서 사용하는 전역변수 설정
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//앞서 선언한 플러그인을 적용할지 결정(항상 추가)
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.eunkyu.baek'
version '1.0-SNAPSHOT'

//각종 의존성들을 어떤 원격 저장소에서 받을지
repositories {
    mavenCentral()
    jcenter() //mavenCentral 보다 라이브러리 업로드 난이도 쉬움
}

// 의존성 선
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok');
    //스프링부트용 Jpa 추상화 라이브러리, 부트 버전에 맞춰 자동으로 라이브러리 버전 관리 해줌
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    /*
    인메모리 관계형 데이터베이스
    별도의 설치 없이 프로젝트 dependencies(의존성) 만으로 관리할 수 있음
    메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용하여 테스트에서 많이 사용됨
     */
    compile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
